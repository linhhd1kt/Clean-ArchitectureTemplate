//
//  LoginViewController.swift
//  CleanSwift
//
//  Created by Ha Linh on 9/5/18.
//  Copyright (c) 2018 HaLinh. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SnapKit

protocol LoginDisplayLogic: class
{
    func showLoading(viewModel: Login.ShowLoading.ViewModel)
    func hideLoading(viewModel: Login.HideLoading.ViewModel)
    func displayError(viewModel: Login.ShowError.ViewModel)
    func gotoMain(viewModel: Login.GotoMain.ViewModel)
}

class LoginViewController: UIViewController, LoginDisplayLogic
{
    
    @IBOutlet weak var usernameTextField: UITextField!
    @IBOutlet weak var passwordTextField: UITextField!
    
    var interactor: LoginBusinessLogic?
    var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?
    
    override func loadView() {
        super.loadView()
        setup()
    }
    
    // MARK: View lifecycle
    override func viewDidLoad()
    {
        super.viewDidLoad()
        title = "Login"
    }
    
    private func setup()
    {
        let viewController = self
        let interactor = LoginInteractor()
        let presenter = LoginPresenter()
        let router = LoginRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: action logic
    
    @IBAction func loginAction(_ sender: Any) {
        
        let request = Login.Login.Request(email: usernameTextField.text!, password: passwordTextField.text!)
        interactor?.login(request: request)
    }
    
    // MARK: display logic
    func showLoading(viewModel: Login.ShowLoading.ViewModel) {
        Helper.showLoading()
    }
    
    func hideLoading(viewModel: Login.HideLoading.ViewModel) {
        Helper.hideLoading()
    }
    
    func displayError(viewModel: Login.ShowError.ViewModel) {
        let alert = UIAlertController(title: "Error", message: viewModel.errorString, preferredStyle: .alert)
        let okAction = UIAlertAction(title: "OK", style: .default) { _ in }
        alert.addAction(okAction)
        self.present(alert, animated: true, completion: nil)
    }
    
    func gotoMain(viewModel: Login.GotoMain.ViewModel) {
        router?.routeToMain()
    }
}
