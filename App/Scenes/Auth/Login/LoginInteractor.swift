//
//  LoginInteractor.swift
//  CleanSwift
//
//  Created by Ha Linh on 9/5/18.
//  Copyright (c) 2018 HaLinh. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import PromiseKit

protocol LoginBusinessLogic
{
    func login(request: Login.Login.Request)
}

protocol LoginDataStore
{
    var token: String { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore
{
    var presenter: LoginPresentationLogic?
    var worker: LoginWorker?
    var token: String = ""
    
    // MARK: Do something
    
    func login(request: Login.Login.Request)
    {
    	presenter?.showLoading(response: Login.ShowLoading.Response())
        
            
        worker = LoginWorker()
        
        worker?.login(email: request.email, password: request.password)
            .done({ (result) in
                self.presenter?.hideLoading(response: Login.HideLoading.Response())
                self.token = result.token
                self.presenter?.gotoMain(response: Login.GotoMain.Response())
            })
            .catch({ (error) in
                self.presenter?.hideLoading(response: Login.HideLoading.Response())
                let response = Login.ShowError.Response(error: error)
                self.presenter?.showError(response: response)
            })
    }
}
